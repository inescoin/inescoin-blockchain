<?php

// Copyright 2019-2021 The Inescoin developers.
// - Mounir R'Quiba
// Licensed under the GNU Affero General Public License, version 3.

namespace Inescoin;

class BlockchainConfig {

	const GENESIS_DATE = '1984-12-31 23:59:59';

	const GENESIS_BLOCK_HASH = 'cc25b241840f92f8fe49775ec472303a69e92ddb53194172565d630a991345b6';

	const GENESIS_MINER_ADDRESS = '0x3239E215BdF7176C0645bE6693244368Fa6EbE0e';

	const GENESIS_MINER_REWARD = 900000000000000000;

	const HASH_ALGORITHM = 'SHA256';

    const FIXED_TRANSACTION_FEE = 1000000;

    const FIXED_MINER_REWARD = 100000000000;

	const DISPLAY_DECIMA_POINT = 9;

	const MIN_TRANSACRTION_AMOUNT = self::FIXED_TRANSACTION_FEE * 2;

	const MAX_TRANSACRTION_AMOUNT = 9000000000000000000;

    const NAME = 'inescoin';

    const DIFFICULTY_TARGET = 30;

    const BLOCK_TARGET = 90;

    const SYMBOL = 'ines';

    const VERSION = '1.0';

	const MIN_DIFFICULTY = 1;

	const NEXT_TIMESTAMP = 3;

	const NEXT_EMPTY_TIMESTAMP = 15;

	const WEB_COST_UNIT_BLOCKS = 10000;

	const WEB_COST_ONE_MONTH = 99999000000;

	const WEB_COST_THREE_MONTH = 199999000000;

	const WEB_COST_SIX_MONTH = 299999000000;

	const WEB_COST_UPDATE = 999000000;

	const WEB_COST_DELETE = 299999000000;

	const AUTHORIZED_MINERS = '0x3239E215BdF7176C0645bE6693244368Fa6EbE0e|0x195eAE1B15F1Dae810b0500b728b56C00f83E2fe|0x00C6C990EEEa72d5DA5FE88C9937CDfbcA66a620|0xb97D09b2F5C2B09bB9F946Fbd403aD3c4bB350Bd|0x426Ec9F17ae8Ed006548b2C15d6E8E0B0576F2a4';

    const CONFIG = [
    	'GENESIS_MINER_REWARD' => self::GENESIS_MINER_REWARD,
		'HASH_ALGORITHM' => self::HASH_ALGORITHM,
	    'FIXED_MINER_REWARD' => self::FIXED_MINER_REWARD,
		'DISPLAY_DECIMA_POINT' => self::DISPLAY_DECIMA_POINT,
		'FIXED_TRANSACTION_FEE' => self::FIXED_TRANSACTION_FEE,
		'MIN_TRANSACRTION_AMOUNT' => self::MIN_TRANSACRTION_AMOUNT,
		'MAX_TRANSACRTION_AMOUNT' => self::MAX_TRANSACRTION_AMOUNT,
	    'NAME' => self::NAME,
	    'AUTHORIZED_MINERS' => self::AUTHORIZED_MINERS,
	    'DIFFICULTY_TARGET' => self::DIFFICULTY_TARGET,
	    'BLOCK_TARGET' => self::BLOCK_TARGET,
	    'SYMBOL' => self::SYMBOL,
	    'VERSION' => self::VERSION,
		'MIN_DIFFICULTY' => self::MIN_DIFFICULTY,
		'NEXT_TIMESTAMP' => self::NEXT_TIMESTAMP,
		'NEXT_EMPTY_TIMESTAMP' => self::NEXT_EMPTY_TIMESTAMP,
		'WEB_COST_ONE_MONTH' => self::WEB_COST_ONE_MONTH,
		'WEB_COST_THREE_MONTH' => self::WEB_COST_THREE_MONTH,
		'WEB_COST_SIX_MONTH' => self::WEB_COST_SIX_MONTH,
		'WEB_COST_UPDATE' => self::WEB_COST_UPDATE,
		'WEB_COST_DELETE' => self::WEB_COST_DELETE,
    ];

	static function getHash(): string
	{
		return md5(implode('', self::CONFIG));
	}
}

